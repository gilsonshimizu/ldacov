% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LDA cov main function.R
\name{gibbs.LDA.cov}
\alias{gibbs.LDA.cov}
\title{Gibbs sampling LDA with covariates}
\usage{
gibbs.LDA.cov(
  ncomm,
  ngibbs,
  y,
  xmat,
  phi.prior,
  array.lsk.init,
  var.betas,
  phi.init,
  estimate.phi
)
}
\arguments{
\item{ncomm}{Integer. Number of clusters (communities, topics, etc.)}

\item{ngibbs}{Integer. Total sample size}

\item{y}{Matrix \eqn{L x S} with the quantities of each category in each sample unit. In text analysis we call this matrix bag of words.}

\item{xmat}{Matrix \eqn{L x D} with covariates for each sample unit.}

\item{phi.prior}{Numeric. Positive real number corresponding to the hyper parameter \eqn{\gamma} of the prior of \eqn{\phi}. We assume all \eqn{\gamma}'s equal.}

\item{array.lsk.init}{Array with initial values of the quantity of elements in each sample unit, category and cluster. Previously estimated in the model without covariates.}

\item{var.betas}{Vector. Positive real vector corresponding to the diagonal of the hyper parameter \eqn{T} of the prior of \eqn{\beta}.}

\item{phi.init}{Sample of the matrix \eqn{\Phi} previously generated with the model without covariates.}

\item{estimate.phi}{Logical. If FALSE \eqn{\Phi} will not be estimated. The matrix containing the posterior sample (\code{phi.init}) of the model without covariates will be used. If TRUE \eqn{\Phi} will be estimated. The matrix containing the posterior sample (\code{phi.init}) of the model without covariates will be used only to initialize the model.}

\item{nburn}{Integer. Beginning of the sample to be thrown away}
}
\value{
Returns a list containing samples of the parameters of interest (\code{phi}, \code{nlk} and \code{betas}) and a vector with the log likelihood (\code{llk}).
}
\description{
This function generates a sample of the parameters of interest using Slice sampling combined with Gibbs sampling.
}
\examples{
library(ldacov)
#Loads simulated data set
data("sim_data")

#Model without covariates
res=gibbs.LDA(y=sim_data$y,
             ncomm=4,#Number of clusters found previously
             ngibbs=1000,
             nburn=500,
             psi=0.01,
             gamma=0.1)

plot(res$llk,type='l')

#Model with covariates
res.cov=gibbs.LDA.cov(ncomm=4,
                     ngibbs=1000,
                     nburn=500,
                     y=sim_data$y,
                     xmat=sim_data$xmat,
                     phi.prior=0.01,
                     array.lsk.init=res$array.lsk,
                     var.betas=c(10,rep(10,ncol(sim_data$xmat)-1)),
                     phi.init=res$phi,
                     estimate.phi=FALSE)

plot(res.cov$llk,type='l')
}
